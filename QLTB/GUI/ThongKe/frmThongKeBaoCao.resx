<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnThoat.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        O6qbCcJ/AWm7KFFpi+EFAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="axFoxitCtl1.OcxState" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACFTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5BeEhvc3QrU3RhdGUBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAAFQAAAAIB
        AAAAAQAAAAAAAAAAAAAAAAAAAAAL
</value>
  </data>
</root>